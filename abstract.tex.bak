

\begin{abstract}
This paper proposes a different approach to improving and broadening the power, expressibility and capability of the purely functional programming language Haskell  by combining and extending the methodologies of embedding of languages into one another and also marrying / merging / combining different programming paradigms. The proposal discusses the act of extending Haskell with logic programming capabilities similar to those of Prolog, a logic programming language. The embeddings and paradigm integrations are more or less towards declarative languages.

---------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------

This paper proposes a modified approach to improving and broadening the power, expressibility and capability of the purely functional programming language Haskell  by combining and extending the methodologies of embedding languages into one another and also marrying / merging / combining different programming paradigms. The proposal discusses the process of extending Haskell with logic programming capabilities similar to those of Prolog, a logic programming language. The embeddings and paradigm integrations are more or less towards declarative languages.

---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------


Programming has become an integral part of working and interacting with computers and day by day more and more complex problems are solved using the power of programming. It is possibly the only way to talk to computers and hence the need for a robust and multi purpose programming language has never been more urgent. In the last few years or nearly a decade, the Declarative Style of programming has gained popularity in being more suited for solving problems and also in the way it has easily adapted to a number of domains. Declarative Programming Languages have not only challenged but has also proved as a better more richer alternative than the conventional Procedural Imperative Object Oriented way of doing things. The methodologies that have stood out are the Functional and Logical Approaches. The former based on Functions and Lambda Calculus while the latter on Horn Clause Logic. With each of them having their own advantages and flaws, one has to make a choice or may be not? This document looks at the attempts, improvements and future possibilities of bringing Haskell, a Purely Functional Programming Language and Prolog, a Logical Programming Language, one step closer to avail a mixed bag of a rich feature set.    

       
\end{abstract}

